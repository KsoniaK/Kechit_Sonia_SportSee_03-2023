{"ast":null,"code":"var _jsxFileName = \"/Users/kechitsonia/Desktop/OCR/DEV_FRONT/PROJET 12/Kechit_Sonia_SportSee_03-2023/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport useFetch from \"./service/service\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Error from \"./pages/Error\";\nimport \"../src/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // // const {user, loading, error} = useFetch(`http://localhost:3000/user/${userId}`);\n  // const {user, loading, error} = useFetch(`http://localhost:3000/user/12}`);\n  // // const {activity} = useFetch(`http://localhost:3000/user/${userId}/activity`);\n  // const {activity} = useFetch(`http://localhost:3000/user/12/activity`);\n  // // const {sessions} = useFetch(`http://localhost:3000/user/${userId}/average-sessions`);\n  // const {sessions} = useFetch(`http://localhost:3000/user/12/average-sessions`);\n  // // const {performance} = useFetch(`http://localhost:3000/user/${userId}/performance`);\n  // const {performance} = useFetch(`http://localhost:3000/user/12/performance`);\n\n  // if(loading) return <h1>LOADING ...</h1>\n  // if(error) console.log(error);\n\n  const {\n    user,\n    activity,\n    sessions,\n    performance,\n    loading,\n    error\n  } = useFetch(id);\n  console.log(user);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"LOADING ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 24\n  }, this);\n  if (error) console.log(error);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user/:id\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: user,\n          activity: activity,\n          sessions: sessions,\n          performance: performance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/404\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/404\",\n        excat: true,\n        element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"hL80gYuW7t0VsKdLNBhKTSFGkI0=\", false, function () {\n  return [useFetch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Routes","Route","Navigate","useFetch","Nav","Home","Dashboard","Error","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","activity","sessions","performance","loading","error","id","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","excat","_c","$RefreshReg$"],"sources":["/Users/kechitsonia/Desktop/OCR/DEV_FRONT/PROJET 12/Kechit_Sonia_SportSee_03-2023/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport useFetch from \"./service/service\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Error from \"./pages/Error\";\nimport \"../src/App.css\";\n\nfunction App() {\n  // // const {user, loading, error} = useFetch(`http://localhost:3000/user/${userId}`);\n  // const {user, loading, error} = useFetch(`http://localhost:3000/user/12}`);\n  // // const {activity} = useFetch(`http://localhost:3000/user/${userId}/activity`);\n  // const {activity} = useFetch(`http://localhost:3000/user/12/activity`);\n  // // const {sessions} = useFetch(`http://localhost:3000/user/${userId}/average-sessions`);\n  // const {sessions} = useFetch(`http://localhost:3000/user/12/average-sessions`);\n  // // const {performance} = useFetch(`http://localhost:3000/user/${userId}/performance`);\n  // const {performance} = useFetch(`http://localhost:3000/user/12/performance`);\n\n  // if(loading) return <h1>LOADING ...</h1>\n  // if(error) console.log(error);\n\n  const {user, activity, sessions, performance, loading, error} = useFetch(id);\n  console.log(user);\n\n    if(loading) return <h1>LOADING ...</h1>\n  if(error) console.log(error);\n\n  return (\n    <>\n    <Nav />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/user/:id\" element={<Dashboard user={user} activity={activity} sessions={sessions} performance={performance} />} />\n        <Route path=\"/*\" element={<Navigate to=\"/404\" replace />} />\n        <Route path=\"/404\" excat={true} element={<Error />} />\n      </Routes>\n    </>\n  );\n}\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAM;IAACC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGhB,QAAQ,CAACiB,EAAE,CAAC;EAC5EC,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EAEf,IAAGI,OAAO,EAAE,oBAAOT,OAAA;IAAAc,QAAA,EAAI;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;EACzC,IAAGR,KAAK,EAAEE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAE5B,oBACEV,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACAd,OAAA,CAACL,GAAG;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACLlB,OAAA,CAACT,MAAM;MAAAuB,QAAA,gBACLd,OAAA,CAACR,KAAK;QAAC2B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEpB,OAAA,CAACJ,IAAI;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrClB,OAAA,CAACR,KAAK;QAAC2B,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEpB,OAAA,CAACH,SAAS;UAACQ,IAAI,EAAEA,IAAK;UAACC,QAAQ,EAAEA,QAAS;UAACC,QAAQ,EAAEA,QAAS;UAACC,WAAW,EAAEA;QAAY;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAChIlB,OAAA,CAACR,KAAK;QAAC2B,IAAI,EAAC,IAAI;QAACC,OAAO,eAAEpB,OAAA,CAACP,QAAQ;UAAC4B,EAAE,EAAC,MAAM;UAACC,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC5DlB,OAAA,CAACR,KAAK;QAAC2B,IAAI,EAAC,MAAM;QAACI,KAAK,EAAE,IAAK;QAACH,OAAO,eAAEpB,OAAA,CAACF,KAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/C;EAAA,gBACR;AAEP;AAACd,EAAA,CA9BQD,GAAG;EAAA,QAasDT,QAAQ;AAAA;AAAA8B,EAAA,GAbjErB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}